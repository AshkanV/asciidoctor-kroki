name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v2.1.3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install dependencies
        run: |
          npm ci
      - name: Lint, build and test
        run: |
          npm run lint
          npm t

  publish-ruby:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install and test
        run: |
          bundle install
          bundle exec rake
        working-directory: ./ruby  
      - name: Configure credentials
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}" > $HOME/.gem/credentials
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
      - name: Build gem
        run: |
          bundle exec rake build
        working-directory: ./ruby
      - name: Publish to rubygems.org
        run: |
          gem push pkg/asciidoctor-kroki-${GITHUB_REF#refs/tags/v}.gem
        working-directory: ./ruby
  publish-js:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      # install dependencies
      - name: Install dependencies
        run: |
          npm ci
      # package and publish
      - name: Package and publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          ./tasks/package.sh
          ./tasks/publish.sh
      # create the GitHub release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      # upload assets
      - name: Upload source code as a zip file
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/asciidoctor-kroki.dist.zip
          asset_name: asciidoctor-kroki.dist.zip
          asset_content_type: application/zip
      - name: Upload source code as a tar.gz file
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/asciidoctor-kroki.dist.tar.gz
          asset_name: asciidoctor-kroki.dist.tar.gz
          asset_content_type: application/tar+gzip
